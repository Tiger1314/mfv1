<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mf.dao.MfComplaintsDao">

	<select id="queryObject" resultType="mf.entity.MfComplaintsEntity">
		select * from mf_complaints where id = #{value}
	</select>

	<select id="queryList" resultType="mf.entity.MfComplaintsEntity">
		select house_id,house_title,house_url,count(1) comcount from mf_complaints
		where `status` = 0
		group by house_id,house_title,house_url
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*)from(
		select house_id,house_title,house_url,count(1) comcount from mf_complaints
		where `status`=0
		group by house_id,house_title,house_url
		) as a
	</select>

	<select id="queryListHouse" resultType="mf.entity.MfComplaintsEntity">
		select * from mf_complaints
		where 1 = 1
		<if test="houseId != null and houseId != 0">
			and `house_id` = #{houseId}
		</if>
		<if test="openId != null and openId != ''">
			and `open_id` = #{openId}
		</if>
		order by id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryHouseTotal" resultType="int">
		select count(*) from mf_complaints
		where 1 = 1
		<if test="houseId != null and houseId != 0">
			and `house_id` = #{houseId}
		</if>
		<if test="openId != null and openId != ''">
			and `open_id` = #{openId}
		</if>
	</select>

	 
	<insert id="save" parameterType="mf.entity.MfComplaintsEntity" useGeneratedKeys="true" keyProperty="id">
		insert into mf_complaints
		(
			`open_id`,
			`nickname`,
			`house_id`, 
			`house_title`, 
			`house_url`,
			`com_type`,
			`status`, 
			`create_time`, 
			`update_time`, 
			`attr1`, 
			`attr2`, 
			`attr3`, 
			`attr4`
		)
		values
		(
			#{openId},
			#{nickname},
			#{houseId}, 
			#{houseTitle}, 
			#{houseUrl},
			#{comType},
			#{status}, 
			#{createTime}, 
			#{updateTime}, 
			#{attr1}, 
			#{attr2}, 
			#{attr3}, 
			#{attr4}
		)
	</insert>
	 
	<update id="update" parameterType="mf.entity.MfComplaintsEntity">
		update mf_complaints 
		<set>
			<if test="openId != null">`open_id` = #{openId}, </if>
			<if test="houseId != null">`house_id` = #{houseId}, </if>
			<if test="houseTitle != null">`house_title` = #{houseTitle}, </if>
			<if test="houseUrl != null">`house_url` = #{houseUrl}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="attr1 != null">`attr1` = #{attr1}, </if>
			<if test="attr2 != null">`attr2` = #{attr2}, </if>
			<if test="attr3 != null">`attr3` = #{attr3}, </if>
			<if test="attr4 != null">`attr4` = #{attr4}</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="delete">
		update mf_complaints
		<set>
			`status` = -1
		</set>
		where `house_id` = #{value}
	</update>
	
	<update id="deleteBatch">
		update mf_complaints
		<set>
			`status` = -1
		</set>
		where `house_id` in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

	<update id="complaints">
		update mf_complaints
		<set>
			`status` = 1
		</set>
		where `house_id` in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

</mapper>